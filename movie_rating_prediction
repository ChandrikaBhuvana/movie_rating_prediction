{"cells":[{"cell_type":"code","source":["# Importing necessary libraries\n","import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from sklearn.compose import ColumnTransformer\n","from sklearn.pipeline import Pipeline\n","from sklearn.preprocessing import MinMaxScaler, OneHotEncoder\n","from sklearn.metrics import mean_squared_error, r2_score\n","from sklearn.model_selection import train_test_split, GridSearchCV\n","import pickle\n","\n","# Models\n","from sklearn.linear_model import LinearRegression, Ridge, Lasso, ElasticNet\n","from sklearn.ensemble import RandomForestRegressor\n","import xgboost as xgb\n","from sklearn.svm import SVR"],"metadata":{"id":"E_CgXJc7cLR7","executionInfo":{"status":"ok","timestamp":1726377142611,"user_tz":-330,"elapsed":1053,"user":{"displayName":"MUKKOLLA BHUVANA CHANDRIKA 121AD0019","userId":"02779932169312137894"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["# Loading dataset\n","df1 = pd.read_csv('/content/drive/MyDrive/Projects/Atharvo/MOVIE RATING PREDICTION/Movie dataset.csv', encoding='unicode_escape')\n"],"metadata":{"id":"BFNVtlHBcRaO","executionInfo":{"status":"ok","timestamp":1726377184416,"user_tz":-330,"elapsed":911,"user":{"displayName":"MUKKOLLA BHUVANA CHANDRIKA 121AD0019","userId":"02779932169312137894"}}},"execution_count":3,"outputs":[]},{"cell_type":"markdown","source":["Data Preprocessing"],"metadata":{"id":"cM253Z85GYut"}},{"cell_type":"code","source":["\n","# Data Preprocessing\n","df2 = df1.dropna(subset=['Rating', 'Genre'])\n","df2.fillna({'Director': 'Unknown', 'Actor 1': 'Unknown', 'Actor 2': 'Unknown', 'Actor 3': 'Unknown'}, inplace=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SGiGGhotcYNF","executionInfo":{"status":"ok","timestamp":1726377255106,"user_tz":-330,"elapsed":400,"user":{"displayName":"MUKKOLLA BHUVANA CHANDRIKA 121AD0019","userId":"02779932169312137894"}},"outputId":"5fddc83c-5205-4df1-f650-647b1d9aa02c"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-4-ede31298d46d>:3: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df2.fillna({'Director': 'Unknown', 'Actor 1': 'Unknown', 'Actor 2': 'Unknown', 'Actor 3': 'Unknown'}, inplace=True)\n"]}]},{"cell_type":"code","source":["\n","# Converting data types\n","def convert_duration(duration_array):\n","    durations_min = pd.Series(duration_array).str.replace(' min', '').astype(float)\n","    median_duration = durations_min.median()\n","    durations_min.fillna(median_duration, inplace=True)\n","    return durations_min\n","\n","df2['Duration'] = convert_duration(df2['Duration'])\n","\n","def convert_years(Year):\n","    years = Year.str.replace('[()]', '', regex=True).astype(int)\n","    return years\n","\n","df2['Year'] = convert_years(df2['Year'])\n","\n","def convert_votes(vote):\n","    votes = vote.str.replace(',', '').astype(int)\n","    return votes\n","\n","df2['Votes'] = convert_votes(df2['Votes'])\n","\n","df2.info()\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"buML5sipcezr","executionInfo":{"status":"ok","timestamp":1726377393680,"user_tz":-330,"elapsed":443,"user":{"displayName":"MUKKOLLA BHUVANA CHANDRIKA 121AD0019","userId":"02779932169312137894"}},"outputId":"19533755-b38e-45de-ea76-342472d3bce9"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 7817 entries, 1 to 15508\n","Data columns (total 10 columns):\n"," #   Column    Non-Null Count  Dtype  \n","---  ------    --------------  -----  \n"," 0   Name      7817 non-null   object \n"," 1   Year      7817 non-null   int64  \n"," 2   Duration  7817 non-null   float64\n"," 3   Genre     7817 non-null   object \n"," 4   Rating    7817 non-null   float64\n"," 5   Votes     7817 non-null   int64  \n"," 6   Director  7817 non-null   object \n"," 7   Actor 1   7817 non-null   object \n"," 8   Actor 2   7817 non-null   object \n"," 9   Actor 3   7817 non-null   object \n","dtypes: float64(2), int64(2), object(6)\n","memory usage: 671.8+ KB\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-5-19767dbe47ae>:8: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df2['Duration'] = convert_duration(df2['Duration'])\n","<ipython-input-5-19767dbe47ae>:14: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df2['Year'] = convert_years(df2['Year'])\n","<ipython-input-5-19767dbe47ae>:20: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df2['Votes'] = convert_votes(df2['Votes'])\n"]}]},{"cell_type":"code","source":["# Handling Outliers\n","def find_duration_outliers(df):\n","    outliers_index = df[df['Duration'] > 225].index\n","    return outliers_index\n","\n","outliers_indices = find_duration_outliers(df2)\n","df2 = df2.drop(outliers_indices)\n","df2 = df2[df2['Director'] != 'Unknown']\n","df2 = df2[df2['Actor 1'] != 'Unknown']\n","df2 = df2[df2['Actor 2'] != 'Unknown']\n","df2 = df2[df2['Actor 3'] != 'Unknown']\n","\n"],"metadata":{"id":"yfUqwhCuGyza","executionInfo":{"status":"ok","timestamp":1726377428176,"user_tz":-330,"elapsed":627,"user":{"displayName":"MUKKOLLA BHUVANA CHANDRIKA 121AD0019","userId":"02779932169312137894"}}},"execution_count":7,"outputs":[]},{"cell_type":"markdown","source":["Feature Eningeering\n"],"metadata":{"id":"T-2g6RwWG4BG"}},{"cell_type":"code","source":["# Creating a copy for feature engineering\n","df3 = df2.copy()\n","\n","# Feature Engineering\n","df3['Votes_Rating'] = df3['Votes'] * df3['Rating']\n","\n","# Movie count by Director and Actors\n","director_movie_count = df3['Director'].value_counts().to_dict()\n","actor1_movie_count = df3['Actor 1'].value_counts().to_dict()\n","actor2_movie_count = df3['Actor 2'].value_counts().to_dict()\n","actor3_movie_count = df3['Actor 3'].value_counts().to_dict()\n","\n","df3['Director_Movie_Count'] = df3['Director'].map(director_movie_count)\n","df3['Actor1_Movie_Count'] = df3['Actor 1'].map(actor1_movie_count)\n","df3['Actor2_Movie_Count'] = df3['Actor 2'].map(actor2_movie_count)\n","df3['Actor3_Movie_Count'] = df3['Actor 3'].map(actor3_movie_count)\n","\n","# Average Rating by Director and Actors\n","director_avg_rating = df3.groupby('Director')['Rating'].mean().to_dict()\n","actor1_avg_rating = df3.groupby('Actor 1')['Rating'].mean().to_dict()\n","actor2_avg_rating = df3.groupby('Actor 2')['Rating'].mean().to_dict()\n","actor3_avg_rating = df3.groupby('Actor 3')['Rating'].mean().to_dict()\n","\n","df3['Director_Avg_Rating'] = df3['Director'].map(director_avg_rating)\n","df3['Actor1_Avg_Rating'] = df3['Actor 1'].map(actor1_avg_rating)\n","df3['Actor2_Avg_Rating'] = df3['Actor 2'].map(actor2_avg_rating)\n","df3['Actor3_Avg_Rating'] = df3['Actor 3'].map(actor3_avg_rating)\n","\n"],"metadata":{"id":"frXCJGtlG2rw","executionInfo":{"status":"ok","timestamp":1726377431492,"user_tz":-330,"elapsed":611,"user":{"displayName":"MUKKOLLA BHUVANA CHANDRIKA 121AD0019","userId":"02779932169312137894"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["# Splitting the dataset\n","X = df3.drop(['Rating', 'Name', 'Director', 'Actor 1', 'Actor 2', 'Actor 3'], axis=1)\n","y = df3['Rating']\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n","\n","# Column transformer to scale numerical features\n","numerical_features = ['Year', 'Duration', 'Votes', 'Votes_Rating',\n","                      'Director_Movie_Count', 'Actor1_Movie_Count', 'Actor2_Movie_Count',\n","                      'Actor3_Movie_Count', 'Director_Avg_Rating', 'Actor1_Avg_Rating',\n","                      'Actor2_Avg_Rating', 'Actor3_Avg_Rating']\n","\n","preprocessor = ColumnTransformer(transformers=[\n","    ('num', MinMaxScaler(), numerical_features)\n","])\n","\n"],"metadata":{"id":"5eY1hPZhG_PQ","executionInfo":{"status":"ok","timestamp":1726377436406,"user_tz":-330,"elapsed":8,"user":{"displayName":"MUKKOLLA BHUVANA CHANDRIKA 121AD0019","userId":"02779932169312137894"}}},"execution_count":9,"outputs":[]},{"cell_type":"markdown","source":["Model Building"],"metadata":{"id":"VKU2gCsvHiSq"}},{"cell_type":"code","source":["# Model pipeline\n","def build_model(model):\n","    pipeline = Pipeline(steps=[\n","        ('preprocessor', preprocessor),\n","        ('model', model)\n","    ])\n","    return pipeline\n","\n","# Model Selection\n","models = {\n","    'Linear Regression': LinearRegression(),\n","    'Ridge': Ridge(),\n","    'Lasso': Lasso(),\n","    'ElasticNet': ElasticNet(),\n","    'Random Forest': RandomForestRegressor(),\n","    'XGBoost': xgb.XGBRegressor(),\n","    'SVR': SVR()\n","}\n","\n","# Model training and evaluation\n","for name, model in models.items():\n","    pipeline = build_model(model)\n","    pipeline.fit(X_train, y_train)\n","    y_pred = pipeline.predict(X_test)\n","    mse = mean_squared_error(y_test, y_pred)\n","    r2 = r2_score(y_test, y_pred)\n","    print(f\"{name} - MSE: {mse}, RÂ²: {r2}\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"u8ZAIFGPHB-E","executionInfo":{"status":"ok","timestamp":1726377455164,"user_tz":-330,"elapsed":12181,"user":{"displayName":"MUKKOLLA BHUVANA CHANDRIKA 121AD0019","userId":"02779932169312137894"}},"outputId":"771f109a-fb9a-4a15-be50-ac9f8b154c9e"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["Linear Regression - MSE: 0.4328262544745622, RÂ²: 0.7635380250886503\n","Ridge - MSE: 0.4325976677896578, RÂ²: 0.7636629067435687\n","Lasso - MSE: 1.830859766397358, RÂ²: -0.00023672702944965707\n","ElasticNet - MSE: 1.830859766397358, RÂ²: -0.00023672702944965707\n","Random Forest - MSE: 0.28657727814569534, RÂ²: 0.8434368792223232\n","XGBoost - MSE: 0.16040180343956015, RÂ²: 0.9123691623866369\n","SVR - MSE: 0.36852305286123804, RÂ²: 0.7986682000478104\n"]}]},{"cell_type":"code","source":["# Saving the best model\n","best_model = build_model((xgb.XGBRegressor()))\n","best_model.fit(X_train, y_train)\n","pickle.dump(best_model, open('best_model.pkl', 'wb'))"],"metadata":{"id":"L2NXx07PHE7O","executionInfo":{"status":"ok","timestamp":1726377477166,"user_tz":-330,"elapsed":516,"user":{"displayName":"MUKKOLLA BHUVANA CHANDRIKA 121AD0019","userId":"02779932169312137894"}}},"execution_count":11,"outputs":[]},{"cell_type":"markdown","source":["Deployment"],"metadata":{"id":"HBqP-1k2HdSl"}},{"cell_type":"code","source":["!pip install streamlit\n","!pip install pyngrok"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9jdrHSPeHc5v","executionInfo":{"status":"ok","timestamp":1726377604486,"user_tz":-330,"elapsed":16868,"user":{"displayName":"MUKKOLLA BHUVANA CHANDRIKA 121AD0019","userId":"02779932169312137894"}},"outputId":"64a3102a-829d-48be-8745-804f8af4a5ba"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting streamlit\n","  Downloading streamlit-1.38.0-py2.py3-none-any.whl.metadata (8.5 kB)\n","Requirement already satisfied: altair<6,>=4.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (4.2.2)\n","Requirement already satisfied: blinker<2,>=1.0.0 in /usr/lib/python3/dist-packages (from streamlit) (1.4)\n","Requirement already satisfied: cachetools<6,>=4.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (5.5.0)\n","Requirement already satisfied: click<9,>=7.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (8.1.7)\n","Requirement already satisfied: numpy<3,>=1.20 in /usr/local/lib/python3.10/dist-packages (from streamlit) (1.26.4)\n","Requirement already satisfied: packaging<25,>=20 in /usr/local/lib/python3.10/dist-packages (from streamlit) (24.1)\n","Requirement already satisfied: pandas<3,>=1.3.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (2.1.4)\n","Requirement already satisfied: pillow<11,>=7.1.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (9.4.0)\n","Requirement already satisfied: protobuf<6,>=3.20 in /usr/local/lib/python3.10/dist-packages (from streamlit) (3.20.3)\n","Requirement already satisfied: pyarrow>=7.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (14.0.2)\n","Requirement already satisfied: requests<3,>=2.27 in /usr/local/lib/python3.10/dist-packages (from streamlit) (2.32.3)\n","Requirement already satisfied: rich<14,>=10.14.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (13.8.1)\n","Collecting tenacity<9,>=8.1.0 (from streamlit)\n","  Downloading tenacity-8.5.0-py3-none-any.whl.metadata (1.2 kB)\n","Requirement already satisfied: toml<2,>=0.10.1 in /usr/local/lib/python3.10/dist-packages (from streamlit) (0.10.2)\n","Requirement already satisfied: typing-extensions<5,>=4.3.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (4.12.2)\n","Collecting gitpython!=3.1.19,<4,>=3.0.7 (from streamlit)\n","  Downloading GitPython-3.1.43-py3-none-any.whl.metadata (13 kB)\n","Collecting pydeck<1,>=0.8.0b4 (from streamlit)\n","  Downloading pydeck-0.9.1-py2.py3-none-any.whl.metadata (4.1 kB)\n","Requirement already satisfied: tornado<7,>=6.0.3 in /usr/local/lib/python3.10/dist-packages (from streamlit) (6.3.3)\n","Collecting watchdog<5,>=2.1.5 (from streamlit)\n","  Downloading watchdog-4.0.2-py3-none-manylinux2014_x86_64.whl.metadata (38 kB)\n","Requirement already satisfied: entrypoints in /usr/local/lib/python3.10/dist-packages (from altair<6,>=4.0->streamlit) (0.4)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from altair<6,>=4.0->streamlit) (3.1.4)\n","Requirement already satisfied: jsonschema>=3.0 in /usr/local/lib/python3.10/dist-packages (from altair<6,>=4.0->streamlit) (4.23.0)\n","Requirement already satisfied: toolz in /usr/local/lib/python3.10/dist-packages (from altair<6,>=4.0->streamlit) (0.12.1)\n","Collecting gitdb<5,>=4.0.1 (from gitpython!=3.1.19,<4,>=3.0.7->streamlit)\n","  Downloading gitdb-4.0.11-py3-none-any.whl.metadata (1.2 kB)\n","Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.10/dist-packages (from pandas<3,>=1.3.0->streamlit) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas<3,>=1.3.0->streamlit) (2024.2)\n","Requirement already satisfied: tzdata>=2022.1 in /usr/local/lib/python3.10/dist-packages (from pandas<3,>=1.3.0->streamlit) (2024.1)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.27->streamlit) (3.3.2)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.27->streamlit) (3.8)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.27->streamlit) (2.0.7)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.27->streamlit) (2024.8.30)\n","Requirement already satisfied: markdown-it-py>=2.2.0 in /usr/local/lib/python3.10/dist-packages (from rich<14,>=10.14.0->streamlit) (3.0.0)\n","Requirement already satisfied: pygments<3.0.0,>=2.13.0 in /usr/local/lib/python3.10/dist-packages (from rich<14,>=10.14.0->streamlit) (2.16.1)\n","Collecting smmap<6,>=3.0.1 (from gitdb<5,>=4.0.1->gitpython!=3.1.19,<4,>=3.0.7->streamlit)\n","  Downloading smmap-5.0.1-py3-none-any.whl.metadata (4.3 kB)\n","Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2->altair<6,>=4.0->streamlit) (2.1.5)\n","Requirement already satisfied: attrs>=22.2.0 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (24.2.0)\n","Requirement already satisfied: jsonschema-specifications>=2023.03.6 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (2023.12.1)\n","Requirement already satisfied: referencing>=0.28.4 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (0.35.1)\n","Requirement already satisfied: rpds-py>=0.7.1 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (0.20.0)\n","Requirement already satisfied: mdurl~=0.1 in /usr/local/lib/python3.10/dist-packages (from markdown-it-py>=2.2.0->rich<14,>=10.14.0->streamlit) (0.1.2)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.8.2->pandas<3,>=1.3.0->streamlit) (1.16.0)\n","Downloading streamlit-1.38.0-py2.py3-none-any.whl (8.7 MB)\n","\u001b[2K   \u001b[90mââââââââââââââââââââââââââââââââââââââââ\u001b[0m \u001b[32m8.7/8.7 MB\u001b[0m \u001b[31m6.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading GitPython-3.1.43-py3-none-any.whl (207 kB)\n","\u001b[2K   \u001b[90mââââââââââââââââââââââââââââââââââââââââ\u001b[0m \u001b[32m207.3/207.3 kB\u001b[0m \u001b[31m6.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading pydeck-0.9.1-py2.py3-none-any.whl (6.9 MB)\n","\u001b[2K   \u001b[90mââââââââââââââââââââââââââââââââââââââââ\u001b[0m \u001b[32m6.9/6.9 MB\u001b[0m \u001b[31m5.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading tenacity-8.5.0-py3-none-any.whl (28 kB)\n","Downloading watchdog-4.0.2-py3-none-manylinux2014_x86_64.whl (82 kB)\n","\u001b[2K   \u001b[90mââââââââââââââââââââââââââââââââââââââââ\u001b[0m \u001b[32m82.9/82.9 kB\u001b[0m \u001b[31m3.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading gitdb-4.0.11-py3-none-any.whl (62 kB)\n","\u001b[2K   \u001b[90mââââââââââââââââââââââââââââââââââââââââ\u001b[0m \u001b[32m62.7/62.7 kB\u001b[0m \u001b[31m3.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading smmap-5.0.1-py3-none-any.whl (24 kB)\n","Installing collected packages: watchdog, tenacity, smmap, pydeck, gitdb, gitpython, streamlit\n","  Attempting uninstall: tenacity\n","    Found existing installation: tenacity 9.0.0\n","    Uninstalling tenacity-9.0.0:\n","      Successfully uninstalled tenacity-9.0.0\n","Successfully installed gitdb-4.0.11 gitpython-3.1.43 pydeck-0.9.1 smmap-5.0.1 streamlit-1.38.0 tenacity-8.5.0 watchdog-4.0.2\n","Collecting pyngrok\n","  Downloading pyngrok-7.2.0-py3-none-any.whl.metadata (7.4 kB)\n","Requirement already satisfied: PyYAML>=5.1 in /usr/local/lib/python3.10/dist-packages (from pyngrok) (6.0.2)\n","Downloading pyngrok-7.2.0-py3-none-any.whl (22 kB)\n","Installing collected packages: pyngrok\n","Successfully installed pyngrok-7.2.0\n"]}]},{"cell_type":"code","source":["%%writefile app.py\n","import streamlit as st\n","import numpy as np\n","import pandas as pd\n","import pickle\n","\n","# Load the saved model\n","with open('best_model.pkl', 'rb') as file:\n","    model = pickle.load(file)\n","\n","# Function to predict movie rating\n","def predict_movie_rating(data):\n","    df = pd.DataFrame([data])\n","    prediction = model.predict(df)\n","    return prediction[0]\n","\n","# Streamlit app UI\n","st.title('Movie Rating Prediction App')\n","\n","# Inputs from the user\n","year = st.number_input('Year of Release', min_value=1900, max_value=2024, step=1)\n","duration = st.number_input('Duration (in minutes)', min_value=1, max_value=300)\n","votes = st.number_input('Votes (in thousands)', min_value=1, step=1)\n","director_movie_count = st.number_input('Number of Movies Directed', min_value=1, step=1)\n","actor1_movie_count = st.number_input('Number of Movies by Actor 1', min_value=1, step=1)\n","actor2_movie_count = st.number_input('Number of Movies by Actor 2', min_value=1, step=1)\n","actor3_movie_count = st.number_input('Number of Movies by Actor 3', min_value=1, step=1)\n","\n","director_avg_rating = st.slider('Average Rating of Director\\'s Movies', 1.0, 10.0, 5.0, step=0.1)\n","actor1_avg_rating = st.slider('Average Rating of Actor 1\\'s Movies', 1.0, 10.0, 5.0, step=0.1)\n","actor2_avg_rating = st.slider('Average Rating of Actor 2\\'s Movies', 1.0, 10.0, 5.0, step=0.1)\n","actor3_avg_rating = st.slider('Average Rating of Actor 3\\'s Movies', 1.0, 10.0, 5.0, step=0.1)\n","\n","# Compute derived feature (Votes_Rating)\n","votes_rating = votes * 5  # Assuming default rating of 5 for input purposes\n","\n","# Create a dictionary of the input data\n","input_data = {\n","    'Year': year,\n","    'Duration': duration,\n","    'Votes': votes,\n","    'Votes_Rating': votes_rating,\n","    'Director_Movie_Count': director_movie_count,\n","    'Actor1_Movie_Count': actor1_movie_count,\n","    'Actor2_Movie_Count': actor2_movie_count,\n","    'Actor3_Movie_Count': actor3_movie_count,\n","    'Director_Avg_Rating': director_avg_rating,\n","    'Actor1_Avg_Rating': actor1_avg_rating,\n","    'Actor2_Avg_Rating': actor2_avg_rating,\n","    'Actor3_Avg_Rating': actor3_avg_rating\n","}\n","\n","# Button to predict\n","if st.button('Predict Rating'):\n","    predicted_rating = predict_movie_rating(input_data)\n","    st.success(f'The predicted rating for the movie is: {predicted_rating:.2f}')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"d7Yy8R0fH3Eo","executionInfo":{"status":"ok","timestamp":1726377612111,"user_tz":-330,"elapsed":405,"user":{"displayName":"MUKKOLLA BHUVANA CHANDRIKA 121AD0019","userId":"02779932169312137894"}},"outputId":"565ed011-8d25-471f-a847-94a6144ef6cf"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["Writing app.py\n"]}]},{"cell_type":"code","source":["from pyngrok import ngrok\n","\n","# Start the Streamlit app\n","!streamlit run app.py &\n","\n","# Set up a tunnel to the Streamlit server\n","public_url = ngrok.connect(port='8501')\n","public_url\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"X2SuRMXUH_4M","outputId":"b22b6322-de62-438a-e8df-430afebb0a12"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Collecting usage statistics. To deactivate, set browser.gatherUsageStats to false.\n","\u001b[0m\n","\u001b[0m\n","\u001b[34m\u001b[1m  You can now view your Streamlit app in your browser.\u001b[0m\n","\u001b[0m\n","\u001b[34m  Local URL: \u001b[0m\u001b[1mhttp://localhost:8501\u001b[0m\n","\u001b[34m  Network URL: \u001b[0m\u001b[1mhttp://172.28.0.12:8501\u001b[0m\n","\u001b[34m  External URL: \u001b[0m\u001b[1mhttp://34.68.227.227:8501\u001b[0m\n","\u001b[0m\n"]}]}],"metadata":{"colab":{"provenance":[],"mount_file_id":"1cZvdBXE8gaKxQkYBX8hp486sFPKHlKr-","authorship_tag":"ABX9TyP0Q+zrhXQloFn32vU4D9qC"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}